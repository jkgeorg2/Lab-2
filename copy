{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Bomb Calorimetry Simulator - Example - CHM 343 - Spring 2025\n",
        "\n",
        "*Jeffery L. Yarger - jyarger@proton.me*\n",
        "\n",
        "\n",
        "The ASU Online CHM 343 quiz on Canvas for the Spring 2025 semester has two questions that use data from the bomb calorimeter simulator.  This data was uploaded to the CHM 343 GitHub 'Calorimetry' repo.  This colab notebook provides an example of data analysis.\n",
        "\n",
        "This juypter notebook is written in python and designed to be web browser compatible using CoLaboratory ([Google CoLab](https://colab.research.google.com/)) and public [GitHub](https://github.com/) repositories.\n",
        "\n",
        "\n",
        "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/CHM343/Calorimetry/blob/main/Notebooks/Bomb_Cal_Simulation_Example_CHM343_Spring2025.ipynb)\n"
      ],
      "metadata": {
        "id": "rhnhqrAH-JEY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Bomb Calorimetry Simulation\n",
        "\n",
        "A [bomb calorimetry simulation website (v2)](https://asu-molecular-sciences-cloud-lab.github.io/bomb_calorimetry_v2/#/) has been developed to generate data that would be indistinquishable from data aquired from a [Parr instrument company 1341 Plain Jacket Bomb Calorimeter](https://www.parrinst.com/products/oxygen-bomb-calorimeters/1341-plain-jacket-bomb-calorimeter/).  The simulator has Calorimeter Codes from 0001-9999, with each code representing a slightly different Parr container with slightly different calorimeter constants.  This simulates the common variation between different Parr containers that would be found in a real experimental lab.\n",
        "\n",
        "<img src=\"https://github.com/CHM343/Calorimetry/blob/main/Images/Bomb_Calorimetry_Simulator_Front_Page_v2.png?raw=true\" width=\"550\" alt=\"Bomb Cal Image\" />\n"
      ],
      "metadata": {
        "id": "JmJoSlkiGLPH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Screenshots of the bomb calorimetry simulator run:\n",
        "\n",
        "<img src=\"https://github.com/CHM343/Calorimetry/blob/main/Images/2025_01_25_Benzoid_Acid_Bomb_Cal_Simulator_0001_Data_Plot.png?raw=true\" width=\"550\" alt=\"Bomb Cal Image\" />\n",
        "\n",
        "<img src=\"https://github.com/CHM343/Calorimetry/blob/main/Images/2025_01_25_Benzoid_Acid_Bomb_Cal_Simulator_0001_Data_Table.png?raw=true\" width=\"550\" alt=\"Bomb Cal Image\" />"
      ],
      "metadata": {
        "id": "jAP9-lzMAHCG"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Background Information\n",
        "\n",
        "The enthalpy of combustion can be done using data from the bomb calorimetry simulation. The \"device\" was first calibrated by combusting benzoic acid, for which the enthalpy of combustion is well known. The calorimeter constant ($C$<sub>eq</sub>) was calculated as follows:\n",
        "\n",
        "\\begin{equation}\n",
        "{C}_{eq} = \\frac{{E}_{released}}{-\\Delta T}\\tag{Eq. 1}\n",
        "\\end{equation}\n",
        "\n",
        " where $E$<sub>released</sub> = $C$<sub>sample</sub> X (sample weight) + $C$<sub>wire</sub> X (wire weight).\n",
        "\n",
        "The combustion enthalpies for subsequent samples were found by using the $C$<sub>eq</sub> just determined within the following equation:\n",
        "\n",
        "\n",
        "\\begin{equation}\n",
        "{\\Delta H}=({C}_{eq}{\\Delta T } +{q}_{corr})/n + {R}{T}{\\Delta N}_{gas}\\tag{Eq. 2}\n",
        "\\end{equation}\n",
        "\n",
        "in which $q$<sub>corr</sub> is the correction for the heat released by the burning of the ignition wire (as above) and $RT\\Delta N$<sub>gas</sub> accounts for the change in pressure-volume resulting from the molar gas difference before and after combustion.\n",
        "\n",
        "Normalized plots of temperature vs. time data are shown below. The temperature change ($\\Delta T$) was found in each case by performing linear regressions on the first and last ten data points collected and extrapolating the lines to a common point in time, selected so that a line drawn vertically between the regression lines at that point approximately equalized the areas bounded by the temperature curves, regression lines, and vertical line just drawn (shown in visualizations). The regression lines are the initial and final temperatures; for an adiabatic device (such as the simulated calorimeter), these lines should be parallel. The vertical line is drawn because the temperature change is considered to be instantaneous along it. The difference between the final and initial tempearture lines at that point is $\\Delta T$."
      ],
      "metadata": {
        "id": "NuECl-JZw-gR"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Colab - Python Code for Analysis of Simulated Data\n",
        "\n",
        "This is simulation data using the Calorimeter Code 0001 (and uploaded to the CHM343 GitHub repo."
      ],
      "metadata": {
        "id": "RLF5z-RF_W2X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Primary Python Libraries\n",
        "import math\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "OGMhlLfeGY3A"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Read in Bomb Cal Simulated Data\n",
        "\n",
        "df_ba_0001 = pd.read_table('https://raw.githubusercontent.com/CHM343/Calorimetry/refs/heads/main/Data/2025_01_25_data_benzoic_acid_cc0001.csv', sep = \",\" , header=11, skiprows=[11])"
      ],
      "metadata": {
        "id": "YIju0_WSGmog"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Example for Calorimeter Code 0001\n",
        "\n",
        "This is the Calorimeter Code used for the quiz for Spring 2025."
      ],
      "metadata": {
        "id": "BO_molO2AnVy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Initialize matplotlib subplot layout\n",
        "fig, ax = plt.subplots()\n",
        "\n",
        "# Set general font size\n",
        "plt.rcParams['font.size'] = '14'\n",
        "\n",
        "# Plot data\n",
        "ax.plot(df_ba_0001['Time (s)'], df_ba_0001['Temperature (C)'], 'o', alpha=0.5, color = 'blue', label = 'Benzoic Acid')\n",
        "\n",
        "# Plot x and y axis min/max limits and x and y axis labels for the plot\n",
        "plt.xlim(0, 1080)\n",
        "plt.xlabel(\"Time (sec)\", fontsize=14)\n",
        "plt.ylabel(\"Temp ($^o$C)\", fontsize=14)\n",
        "\n",
        "# Display the Plot\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "id": "FhKUnORbAy0x",
        "outputId": "f61c5e11-5ea1-400b-9426-b3c6b03581d0"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Determine ΔT\n",
        "# Linear Extrapolation of starting and ending\n",
        "Number_Points = 10\n",
        "Bomb_Cal_Initial = df_ba_0001[df_ba_0001.index.start:df_ba_0001.index.start+Number_Points]\n",
        "Bomb_Cal_Final = df_ba_0001[df_ba_0001.index.stop-1-Number_Points:df_ba_0001.index.stop-1]\n",
        "\n",
        "# Linear fits for initial and final data points\n",
        "mi, bi = np.polyfit(Bomb_Cal_Initial['Time (s)'], Bomb_Cal_Initial['Temperature (C)'], deg=1)\n",
        "mf, bf = np.polyfit(Bomb_Cal_Final['Time (s)'], Bomb_Cal_Final['Temperature (C)'], deg=1)\n",
        "\n",
        "# Estimate Delta T from linear extrapolations\n",
        "guess_temp = 375\n",
        "dt = ((bf + mf * guess_temp) - (bi + mi * guess_temp))\n",
        "\n",
        "# Estimate Delta T from max/min (good estimate if water temp is > room temp)\n",
        "dt_est = df_ba_0001['Temperature (C)'].max() - df_ba_0001['Temperature (C)'].min()\n",
        "\n",
        "# Estimate Delta T from linear extrapolations\n",
        "guess_tmin = 300\n",
        "guess_tmax = 500\n",
        "dt_min = ((bf + mf * guess_tmin) - (bi + mi * guess_tmin))\n",
        "dt_max = ((bf + mf * guess_tmax) - (bi + mi * guess_tmax))"
      ],
      "metadata": {
        "id": "DuuwKIZoA2fn"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Plot Data and ΔT Determination\n",
        "# Initialize matplotlib subplot layout\n",
        "fig, ax = plt.subplots()\n",
        "\n",
        "# Set general font size\n",
        "plt.rcParams['font.size'] = '14'\n",
        "\n",
        "# Plot data\n",
        "ax.plot(df_ba_0001['Time (s)'], df_ba_0001['Temperature (C)'], 'o', alpha=0.5, color = 'blue', label = 'Benzoic Acid')\n",
        "\n",
        "# Create linear sequences for fit lines\n",
        "xseq_initial = np.linspace(0, 600, num=10)\n",
        "xseq_final = np.linspace(200, 1000, num=10)\n",
        "\n",
        "# Plot extrapolation lines\n",
        "ax.plot(xseq_initial, bi + mi * xseq_initial, alpha=0.7, color=\"k\", lw=1.1)\n",
        "ax.plot(xseq_final, bf + mf * xseq_final, alpha=0.7, color=\"k\", lw=1.1)\n",
        "\n",
        "# Draw a vertical line for temperature change\n",
        "ax.axvline(x=guess_temp, color='k', linestyle='dotted')\n",
        "\n",
        "# Fill between data and linear extrapolations\n",
        "ax.fill_between(df_ba_0001['Time (s)'],bi + mi * df_ba_0001['Time (s)'], df_ba_0001['Temperature (C)'],where=df_ba_0001['Time (s)']<=guess_temp , interpolate=True, color='lightblue', alpha=0.3)\n",
        "\n",
        "ax.fill_between(df_ba_0001['Time (s)'],bf + mf * df_ba_0001['Time (s)'], df_ba_0001['Temperature (C)'],where=df_ba_0001['Time (s)']>=guess_temp , interpolate=True, color='lightblue', alpha=0.3)\n",
        "\n",
        "\n",
        "# Annotate ΔT\n",
        "ax.text(guess_temp+50, (df_ba_0001['Temperature (C)'].min() + (df_ba_0001['Temperature (C)'].max() - df_ba_0001['Temperature (C)'].min())/2), '$\\Delta$T = {} $^o$C'.format(round(dt, 2)), fontsize=12)\n",
        "\n",
        "# Annotate regression lines with equations\n",
        "ax.annotate(f'y = {mi:.5f}x + {bi:.3f}', xy=(xseq_initial[-1], bi + mi * xseq_initial[-1]), xytext=(600, bi + mi * xseq_initial[-1] - 0.4),fontsize=10)\n",
        "\n",
        "ax.annotate(f'y = {mf:.5f}x + {bf:.3f}', xy=(xseq_final[0], bf + mf * xseq_final[0]), xytext=(10, bf + mf * xseq_final[0] + 0.2),fontsize=10)\n",
        "\n",
        "# Plot x and y axis min/max limits and x and y axis labels for the plot\n",
        "plt.xlim(0, 1020)\n",
        "plt.ylim(23, 30)\n",
        "plt.xlabel(\"Time (sec)\", fontsize=14)\n",
        "plt.ylabel(\"Temp ($^o$C)\", fontsize=14)\n",
        "\n",
        "# Display the Plot\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "mpbMdZsWBTxe",
        "outputId": "c3bdcf5c-6103-4a0b-a1ee-735ddcb16870"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The calorimeter constant ($C$<sub>eq</sub>) was calculated as follows:\n",
        "\n",
        "\\begin{equation}\n",
        "{C}_{eq} = \\frac{{E}_{released}}{-\\Delta T} =\n",
        "\\end{equation}\n",
        "\n",
        " where $E$<sub>released</sub> = $C$<sub>sample</sub> X (sample weight) + $C$<sub>wire</sub> X (wire weight).\n",
        "\n",
        " The calorimeter constant table lists the value at 10042.50 J/K (for #0001).  The instructions are confusing with respect to if the Ceq is positive or negative.\n"
      ],
      "metadata": {
        "id": "vEitqeIUCaJu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Calculate Calorimeter Constant\n",
        "Hba = 26425\n",
        "Hfe = 5858\n",
        "Wba = 2.0\n",
        "Wfe = 0.021-0.017\n",
        "Erel = (Hba*Wba)+(Hfe*Wfe)\n",
        "Ceq = Erel/dt\n",
        "\n",
        "print('Ceq =', round(Ceq,2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4Xax6BEoB7kx",
        "outputId": "e26cb6ac-f9e8-47c3-8ed5-e39a47990d0e"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ceq = 10028.12\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Horizontal Line Thermodynamic Estimate (Over-Estimate)\n",
        "#Ceq = Erel/dt_est\n",
        "#print('Ceq =', round(Ceq,2))"
      ],
      "metadata": {
        "id": "AtWGZoXPC78N"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Thermodynamic Estimate - Minimum and Maximum\n",
        "Ceq_min = Erel/dt_min\n",
        "Ceq_max = Erel/dt_max\n",
        "\n",
        "print('Ceq,min =', round(Ceq_min,2), \" \", 'Ceq,max =', round(Ceq_max,2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N4NaLY11DOT0",
        "outputId": "4809857c-0c52-4ae1-96d9-60935d935317"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ceq,min = 10008.85   Ceq,max = 10060.41\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Error Analysis\n",
        "\n",
        "Estimate the +/- randon statistical error based on error in simulated data and propagating this error to determination of Delta-T and subsequent Ceq."
      ],
      "metadata": {
        "id": "mlSUk1cruzJG"
      }
    }
  ]
}
